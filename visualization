import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from miv.core.operator import Operator
from miv.signal.spike import ThresholdCutoff
from miv.io.openephys import DataManager



for i in [1,2,3] :
    CI_XY = np.load(f"results/experiment{i}/CI_XY_matrix/CI_XY.npy")
    TC_XY = np.load(f"results/experiment{i}/C_XY_matrix/C_XY.npy")
    C_XY = []
    size = len(CI_XY)
    for j in range(size) :
        if np.isnan(CI_XY[j]).any() :
            CI_XY[j] = [0 for _ in range(len(CI_XY[j]))]
            C_XY.append([[0 for _ in range(30)] for _ in range(len(CI_XY[j]))])
        else :
            C_XY.append(TC_XY[j])
            
    plt.figure()
    plt.imshow(CI_XY, cmap='hot', interpolation='nearest')
    plt.show()
    C_X = np.sum(C_XY, axis=1) / (len(C_XY)-1)
    #Histo = np.array(CI_XY).flatten()
    #Histo = Histo[Histo != 0]
    #plt.hist(Histo, bins=64, edgecolor='black')
    #plt.show()
    plt.imshow(C_X, cmap='hot', interpolation='nearest')
    plt.colorbar()
    plt.show()


